---
version: '3'

x-airflow-common: &airflow-common
  image: airflow-ai-sdk
  build:
    context: ..
    dockerfile: examples/Dockerfile
  env_file: .env
  networks:
    - airflow
  environment: &common-env-vars
    AIRFLOW__API__BASE_URL: "http://localhost:8080"
    AIRFLOW__API__PORT: 8080
    AIRFLOW__API_AUTH__JWT_SECRET: "airflow-ai-sdk"
    AIRFLOW__CORE__AUTH_MANAGER: airflow.api_fastapi.auth.managers.simple.simple_auth_manager.SimpleAuthManager
    AIRFLOW__CORE__SIMPLE_AUTH_MANAGER_ALL_ADMINS: "True"
    AIRFLOW__CORE__EXECUTION_API_SERVER_URL: "http://api-server:8080/execution/"
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__FERNET_KEY: ''
    AIRFLOW__CORE__LOAD_EXAMPLES: "False"
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql://airflow:pg_password@postgres:5432/airflow
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql://airflow:pg_password@postgres:5432/airflow
    AIRFLOW__SCHEDULER__STANDALONE_DAG_PROCESSOR: True
    AIRFLOW__WEBSERVER__SECRET_KEY: "airflow-ai-sdk"
    AIRFLOW__WEBSERVER__RBAC: "True"
    AIRFLOW__WEBSERVER__EXPOSE_CONFIG: "True"
    ASTRONOMER_ENVIRONMENT: local
    OPENLINEAGE_DISABLED: "True"
  volumes:
    - ./dags:/usr/local/airflow/dags
    - ./plugins:/usr/local/airflow/plugins
    - ./include:/usr/local/airflow/include
    - ./tests:/usr/local/airflow/tests
    - airflow_logs:/usr/local/airflow/logs

networks:
  airflow:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  airflow_logs:
    driver: local

services:
  postgres:
    image: postgres:13
    restart: unless-stopped
    networks:
      - airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: pg_password
      POSTGRES_DB: airflow
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5

  db-migration:
    <<: *airflow-common
    depends_on:
      - postgres
    command:
      - airflow
      - db
      - migrate

  scheduler:
    <<: *airflow-common
    depends_on:
      - db-migration
    command:
      - airflow
      - scheduler
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5

  dag-processor:
    <<: *airflow-common
    depends_on:
      - db-migration
    command:
      - airflow
      - dag-processor
    restart: unless-stopped

  api-server:
    <<: *airflow-common
    depends_on:
      - db-migration
    command:
      - airflow
      - api-server
    restart: unless-stopped
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  triggerer:
    <<: *airflow-common
    depends_on:
      - db-migration
    command:
      - airflow
      - triggerer
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type TriggererJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
